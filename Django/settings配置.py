静态文件配置

我们自己导入的一些包就叫做静态文件

1、在全局中先创建一个static的包，

2、在static里面导入我们的bootstrap，还是jquery等

3、然后在settings.py中加上一些配置

STATIC_URL = '/static/'   #这个配置就相当于下面配置的别名,如果这里的名字修改了就按照这里的名字去导入
STATICFILES_DIRS = [
                    os.path.join(BASE_DIR,"static")  #E:\day68\static 找到static路径
                    ]
4、导入css,js,jquery

<link rel = "stysheet",href= "/static/index.css/">

<link rel="stylesheet" href="/static/bootstrap-3.3.7-dist/css/bootstrap.min.css">



"""
    Django settings for first project.
    
    Generated by 'django-admin startproject' using Django 1.11.11.
    
    For more information on this file, see
    https://docs.djangoproject.com/en/1.11/topics/settings/
    
    For the full list of settings and their values, see
    https://docs.djangoproject.com/en/1.11/ref/settings/
    """

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#69g3d*dr=t@=2t(#oh)hq7josgdlxbi*%xk#zxle63dx6f+7f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 放一些指定链接的ip，*代表所有
ALLOWED_HOSTS = ["*"]

# Application definition


# 我这个项目有哪些app
INSTALLED_APPS = [
                  'django.contrib.admin',
                  'django.contrib.auth',
                  'django.contrib.contenttypes',
                  'django.contrib.sessions',
                  'django.contrib.messages',
                  'django.contrib.staticfiles',
                  'app.apps.AppConfig',  # 告诉Django我创建了一个app
                  'testapp.apps.TestappConfig',
                  ]

# 中间件相关配置
MIDDLEWARE = [
              'django.middleware.security.SecurityMiddleware',
              'django.contrib.sessions.middleware.SessionMiddleware',
              'django.middleware.common.CommonMiddleware',
              # 'django.middleware.csrf.CsrfViewMiddleware',
              'django.contrib.auth.middleware.AuthenticationMiddleware',
              'django.contrib.messages.middleware.MessageMiddleware',
              'django.middleware.clickjacking.XFrameOptionsMiddleware',
              ]

ROOT_URLCONF = 'first.urls'

TEMPLATES = [
             {
             'BACKEND': 'django.template.backends.django.DjangoTemplates',
             'DIRS': [os.path.join(BASE_DIR, 'templates')]
             ,
             'APP_DIRS': True,
             'OPTIONS': {
             'context_processors': [
                                    'django.template.context_processors.debug',
                                    'django.template.context_processors.request',
                                    'django.contrib.auth.context_processors.auth',
                                    'django.contrib.messages.context_processors.messages',
                                    ],
             },
             },
             ]

WSGI_APPLICATION = 'first.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',  # 链接数据库的类型
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),  # 链接数据库的名字
        'ENGINE': 'django.db.backends.mysql',  # 链接数据库的类型
        'NAME': 'db',  # 链接数据库的名字
        'HOST': '127.0.0.1',  # 数据库主机地址
        'PORT': 3306,  # 数据库端口
        'USER': 'root',  # 数据库用户名
        'PASSWORD': '123456',  # 数据库密码
}
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
                            {
                            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
                            },
                            {
                            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
                            },
                            {
                            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
                            },
                            {
                            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
                            },
                            ]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/


# 这个static就代表了下面的路径 （寻找的时候就是去static下面的路径中挨个找）
STATIC_URL = '/static/'  # 起别名， HTML中找静态文件都要以这个别名开始  (找到别名后就去这个别名的配置比文件中找对应的文件)

# 这个常量是固定格式
STATICFILES_DIRS = [
                    os.path.join(BASE_DIR, 'static'),
                    ]



# 查看操作数据库SQL语句配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.db.backends': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'DEBUG',
        },
}
}
