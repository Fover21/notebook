{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset134 PingFangSC-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \'c4\'da\'d6\'c3\'ba\'af\'ca\'fd\'a3\'ba
\f1 \
\
    1.lambda   (
\f0 \'c4\'e4\'c3\'fb\'ba\'af\'ca\'fd
\f1 )\
        
\f0 \'ce\'aa\'c1\'cb\'bd\'e2\'be\'f6\'d2\'bb\'d0\'a9\'bc\'f2\'b4\'f0\'b5\'c4\'d0\'e8\'c7\'f3\'b6\'f8\'c9\'e8\'bc\'c6\'b5\'c4\'d2\'bb\'be\'e4\'bb\'b0\'ba\'af\'ca\'fd\'a1\'a3\'b2\'bb\'d0\'e8\'d2\'aa
\f1 def
\f0 \'c0\'b4\'c9\'f9\'c3\'f7\'a1\'a3
\f1 \
        def func(n):\
            return n*n\
        print(func(10))#100\
\
        f = lambda n: n*n\
        print(f(10))#100\
\
        
\f0 \'d7\'a2\'d2\'e2\'a3\'ba
\f1 \
            
\f0 \'d3\'ef\'b7\'a8\'a3\'ba\'ba\'af\'ca\'fd\'c3\'fb
\f1  = lambda 
\f0 \'b2\'ce\'ca\'fd
\f1 :
\f0 \'b7\'b5\'bb\'d8\'d6\'b5
\f1 \
\
            1.
\f0 \'ba\'af\'ca\'fd\'b5\'c4\'b2\'ce\'ca\'fd\'bf\'c9\'d2\'d4\'d3\'d0\'b6\'e0\'b8\'f6\'a1\'a3\'b6\'e0\'b8\'f6\'b2\'ce\'ca\'fd\'d6\'ae\'bc\'e4\'d3\'c3\'b6\'ba\'ba\'c5\'b8\'f4\'bf\'aa\'a1\'a3
\f1 \
            2.
\f0 \'c4\'e4\'c3\'fb\'ba\'af\'ca\'fd\'b2\'bb\'b9\'dc\'b6\'e0\'b8\'b4\'d4\'d3\'a3\'ac\'d6\'bb\'c4\'dc\'d0\'b4\'d2\'bb\'d0\'d0\'a3\'ac\'c7\'d2\'c2\'df\'bc\'ad\'bd\'e1\'ca\'f8\'ba\'f3\'d6\'b1\'bd\'d3\'b7\'b5\'bb\'d8\'ca\'fd\'be\'dd
\f1 \
            3.
\f0 \'b7\'b5\'bb\'d8\'d6\'b5\'ba\'cd\'d5\'fd\'b3\'a3\'b5\'c4\'ba\'af\'ca\'fd\'d2\'bb\'d1\'f9\'a3\'ac\'bf\'c9\'d2\'d4\'ca\'c7\'c8\'ce\'d2\'e2\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'a1\'a3
\f1 \
\
        
\f0 \'c4\'e4\'c3\'fb\'ba\'af\'ca\'fd\'b2\'a2\'b2\'bb\'ca\'c7\'cb\'b5\'d2\'bb\'b6\'a8\'c3\'bb\'d3\'d0\'c3\'fb\'d7\'d6\'a3\'ac\'d5\'e2\'c0\'ef\'c7\'b0\'c3\'e6\'b5\'c4\'b1\'e4\'c1\'bf\'be\'cd\'ca\'c7\'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'c3\'fb\'a3\'ac\'cb\'b5\'cb\'fb\'ca\'c7\'c4\'e4\'c3\'fb\'d4\'ad\'d3\'d0
\f1 \
        
\f0 \'ca\'c7\'ce\'d2\'c3\'c7\'cd\'a8\'b9\'fd
\f1 __name__
\f0 \'b2\'e9\'bf\'b4\'b5\'c4\'ca\'b1\'ba\'f2\'df\'e3\'d3\'d0\'c3\'fb\'d7\'d6\'b5\'c4\'a3\'ac\'cd\'b3\'d2\'bb\'b6\'bc\'bd\'d0\'d7\'f6
\f1 lambda
\f0 \'a1\'a3\'d4\'da\'b5\'f7\'d3\'c3\'b5\'c4\'ca\'b1\'ba\'f2
\f1 \
        
\f0 \'c3\'bb\'d3\'d0\'ca\'b2\'c3\'b4\'cc\'d8\'b1\'f0\'d6\'ae\'b4\'a6\'a1\'a3\'cf\'f1\'d5\'fd\'b3\'a3\'b5\'c4\'ba\'af\'ca\'fd\'b5\'f7\'d3\'c3\'a1\'a3
\f1 \
\
    2.sorted    (
\f0 \'c5\'c5\'d0\'f2\'ba\'af\'ca\'fd
\f1 )\
        
\f0 \'d3\'ef\'b7\'a8\'a3\'ba
\f1 soret(Iterable,key=None,reverse=False)\
            Iterable:
\f0 \'bf\'c9\'b5\'fc\'b4\'fa\'b6\'d4\'cf\'f3
\f1 \
            key:
\f0 \'c5\'c5\'d0\'f2\'b9\'e6\'d4\'f2\'a3\'a8\'c5\'c5\'d0\'f2\'ba\'af\'ca\'fd\'a3\'a9\'a3\'ac\'d4\'da
\f1 soret
\f0 \'c4\'da\'b2\'bf\'bb\'e1\'bd\'ab\'bf\'c9\'b5\'fc\'b4\'fa\'b6\'d4\'cf\'f3\'d6\'d0\'b5\'c4\'c3\'bf\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8
\f1 \
                
\f0 \'b4\'ab\'b5\'dd\'b8\'f8\'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'b5\'c4\'b2\'ce\'ca\'fd\'a3\'ac\'b8\'f9\'be\'dd\'ba\'af\'ca\'fd\'d4\'cb\'cb\'e3\'b5\'c4\'bd\'e1\'b9\'fb\'bd\'f8\'d0\'d0\'c5\'c5\'d0\'f2\'a1\'a3
\f1 \
            recerse:
\f0 \'ca\'c7\'b7\'f1\'ca\'c7\'b5\'b9\'d0\'f2\'a1\'a3
\f1 True
\f0 \'a3\'ba\'b5\'b9\'d0\'f2\'a3\'ac
\f1 False
\f0 \'a3\'ba\'d5\'fd\'d0\'f2\'a1\'a3
\f1 \
            <1>\
            lst = [1,5,3,4,6]\
            lst2 = sorted(lst)\
            print(lst) # 
\f0 \'d4\'ad\'c1\'d0\'b1\'ed\'b2\'bb\'bb\'e1\'b8\'c4\'b1\'e4
\f1  \
            print(lst2) # 
\f0 \'b7\'b5\'bb\'d8\'b5\'c4\'d0\'c2\'c1\'d0\'b1\'ed\'ca\'c7\'be\'ad\'b9\'fd\'c5\'c5\'d0\'f2\'b5\'c4
\f1 \
\
            
\f0 \'bd\'e1\'b9\'fb\'a3\'ba
\f1 \
                [1, 5, 3, 4, 6]\
                [1, 3, 4, 5, 6]\
            <2>\
            dic = \{1:'A', 3:'C', 2:'B'\}\
            print(sorted(dic)) # 
\f0 \'c8\'e7\'b9\'fb\'ca\'c7\'d7\'d6\'b5\'e4
\f1 . 
\f0 \'d4\'f2\'b7\'b5\'bb\'d8\'c5\'c5\'d0\'f2\'b9\'fd\'ba\'f3\'b5\'c4
\f1 key\
\
            
\f0 \'bd\'e1\'b9\'fb\'a3\'ba
\f1 \
                [1, 2, 3]\
            <3>\
            # 
\f0 \'b8\'f9\'be\'dd\'d7\'d6\'b7\'fb\'b4\'ae\'b3\'a4\'b6\'c8\'bd\'f8\'d0\'d0\'c5\'c5\'d0\'f2
\f1 \
            lst = ["
\f0 \'b9\'fe\'b9\'fe
\f1 ", "
\f0 \'ce\'d2\'b0\'ae\'c4\'e3
\f1 ", "
\f0 \'d6\'d0\'b9\'fa
\f1 ", "
\f0 \'c7\'d7\'b0\'ae\'b5\'c4\'c4\'b8\'c7\'d7
\f1 "]\
            # 
\f0 \'bc\'c6\'cb\'e3\'d7\'d6\'b7\'fb\'b4\'ae\'b4\'ae\'b3\'a4\'b6\'c8
\f1  \
            def func(s):\
                return len(s)\
            print(sorted(lst, key=func))\
\
            
\f0 \'bd\'e1\'b9\'fb\'a3\'ba
\f1 \
                ['
\f0 \'b9\'fe\'b9\'fe
\f1 ', '
\f0 \'d6\'d0\'b9\'fa
\f1 ', '
\f0 \'ce\'d2\'b0\'ae\'c4\'e3
\f1 ', '
\f0 \'c7\'d7\'b0\'ae\'b5\'c4\'c4\'b8\'c7\'d7
\f1 ']\
            <4>\
             # 
\f0 \'b8\'f9\'be\'dd\'d7\'d6\'b7\'fb\'b4\'ae\'b3\'a4\'b6\'c8\'bd\'f8\'d0\'d0\'c5\'c5\'d0\'f2
\f1 \
            lst = ["
\f0 \'b9\'fe\'b9\'fe
\f1 ", "
\f0 \'ce\'d2\'b0\'ae\'c4\'e3
\f1 ", "
\f0 \'d6\'d0\'b9\'fa
\f1 ", "
\f0 \'c7\'d7\'b0\'ae\'b5\'c4\'c4\'b8\'c7\'d7
\f1 "]\
            # 
\f0 \'bc\'c6\'cb\'e3\'d7\'d6\'b7\'fb\'b4\'ae\'b3\'a4\'b6\'c8
\f1  \
            print(sorted(lst, key=lambda s: len(s)))\
\
            
\f0 \'bd\'e1\'b9\'fb\'a3\'ba
\f1 \
                ['
\f0 \'b9\'fe\'b9\'fe
\f1 ', '
\f0 \'d6\'d0\'b9\'fa
\f1 ', '
\f0 \'ce\'d2\'b0\'ae\'c4\'e3
\f1 ', '
\f0 \'c7\'d7\'b0\'ae\'b5\'c4\'c4\'b8\'c7\'d7
\f1 ']\
            <5>\
            lst = [\{"id":1, "name":'a', "age":18\},\
                   \{"id":2, "name":'b', "age":16\},\
                   \{"id":3, "name":'c', "age":17\}]\
            # 
\f0 \'b0\'b4\'d5\'d5\'c4\'ea\'c1\'e4\'b6\'d4\'d1\'a7\'c9\'fa\'d0\'c5\'cf\'a2\'bd\'f8\'d0\'d0\'c5\'c5\'d0\'f2
\f1 \
            print(sorted(lst, key=lambda e: e['age']))\
\
            
\f0 \'bd\'e1\'b9\'fb\'a3\'ba
\f1 \
                [\{'id': 2, 'name': 'b', 'age': 16\}, \{'id': 3, 'name': 'c', 'age': 17\}, \{'id': 1, 'name': 'a', 'age': 18\}]\
\
\
    3.filter  (
\f0 \'c9\'b8\'d1\'a1\'ba\'af\'ca\'fd
\f1 )\
        
\f0 \'d3\'ef\'b7\'a8\'a3\'ba
\f1 filter(function,Iterable)\
            function:
\f0 \'d3\'c3\'c0\'b4\'c9\'b8\'d1\'a1\'b5\'c4\'ba\'af\'ca\'fd\'a3\'ac\'d4\'da
\f1 filter
\f0 \'d6\'d0\'bb\'e1\'d7\'d4\'b6\'af\'b5\'c4\'b0\'d1
\f1 iteratable
\f0 \'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'b4\'ab\'b5\'dd\'b8\'f8
\f1 function\
                    
\f0 \'c8\'bb\'ba\'f3\'b8\'f9\'be\'dd
\f1 function
\f0 \'b7\'b5\'bb\'d8
\f1 True
\f0 \'bb\'f2\'d5\'df
\f1 False
\f0 \'c0\'b4\'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'b1\'a3\'c1\'f4\'b4\'cb\'ca\'fd\'be\'dd\'a1\'a3
\f1 \
            Iterable:
\f0 \'bf\'c9\'b5\'fc\'b4\'fa\'b6\'d4\'cf\'f3
\f1 \
\
            
\f0 \'c0\'fd\'d7\'d3\'a3\'ba
\f1 \
                lis = [\
                    \{'id': 1, 'age':30\},\
                    \{'id': 2, 'age':40\},\
                    \{'id': 3, 'age':20\},\
                    \{'id': 4, 'age':40\}\
\
                ]\
                ll = filter(lambda dic: dic['age'] >= 40,lis)#
\f0 \'b7\'b5\'bb\'d8\'d2\'bb\'b8\'f6\'b5\'fc\'b4\'fa\'c6\'f7
\f1 \
                print(list(ll))#[\{'id': 2, 'age': 40\}, \{'id': 4, 'age': 40\}]\
\
    4.map    (
\f0 \'d3\'b3\'c9\'e4\'ba\'af\'ca\'fd
\f1 )\
        
\f0 \'d3\'ef\'b7\'a8\'a3\'ba
\f1 map(function,Iterable)\
            
\f0 \'bf\'c9\'d2\'d4\'b8\'f9\'be\'dd\'bf\'c9\'b5\'fc\'b4\'fa\'b6\'d4\'cf\'f3\'d6\'d0\'b5\'c4\'c3\'bf\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\'bd\'f8\'d0\'d0\'d3\'b3\'c9\'e4\'a1\'a3\'b7\'d6\'b1\'f0\'c8\'a5\'d6\'b4\'d0\'d0
\f1 function\
\
        
\f0 \'c0\'fd\'d7\'d3\'a3\'ba
\f1 \
            <1>\
            #
\f0 \'bc\'c6\'cb\'e3\'c1\'d0\'b1\'ed\'d6\'d0\'c3\'bf\'b8\'f6\'d4\'aa\'cb\'d8\'b5\'c4\'c6\'bd\'b7\'bd
\f1  ,
\f0 \'b7\'b5\'bb\'d8\'d0\'c2\'c1\'d0\'c1\'d0\'b1\'ed
\f1 \
            def func(e):\
                return e*e\
            mp = map(func, [1, 2, 3, 4, 5])\
            print(mp)\
            print(list(mp))\
\
            
\f0 \'bd\'e1\'b9\'fb\'a3\'ba
\f1 \
                <map object at 0x1037503c8>\
                [1, 4, 9, 16, 25]\
            <2>\
            #
\f0 \'b8\'c4\'d0\'b4\'b3\'c9
\f1 lambda\
            print(list(map(lambda x: x * x, [1, 2, 3, 4, 5])))\
\
            
\f0 \'bd\'e1\'b9\'fb\'a3\'ba
\f1 \
                [1, 4, 9, 16, 25]\
            <3>\
            # 
\f0 \'bc\'c6\'cb\'e3\'c1\'bd\'b8\'f6\'c1\'d0\'b1\'ed\'cf\'e0\'cd\'ac\'ce\'bb\'d6\'c3\'b5\'c4\'ca\'fd\'be\'dd\'b5\'c4\'ba\'cd
\f1 \
            lst1 = [1, 2, 3, 4, 5]\
            lst2 = [2, 4, 6, 8, 10]\
            print(list(map(lambda x, y: x+y, lst1, lst2)))\
\
            
\f0 \'bd\'e1\'b9\'fb\'a3\'ba
\f1 \
                [3, 6, 9, 12, 15]}